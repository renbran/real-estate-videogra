import React, { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator, DropdownMenuTrigger } from '@/components/ui/dropdown-menu';\nimport { Bell, User, Settings, LogOut, Menu, X, Briefcase, Calendar, BarChart3, FileText } from 'lucide-react';\nimport { User as UserType } from '@/lib/types';\nimport { cn } from '@/lib/utils';\n\ninterface OSUSHeaderProps {\n  user: UserType;\n  onLogout: () => void;\n}\n\nexport function OSUSHeader({ user, onLogout }: OSUSHeaderProps) {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [notifications, setNotifications] = useState(3); // Mock notification count\n  const [companyBranding, setCompanyBranding] = useState({\n    company_name: 'OSUS VideoPro',\n    logo_url: null,\n    primary_color: '#0ea5e9'\n  });\n\n  useEffect(() => {\n    // Fetch company branding\n    fetchCompanyBranding();\n  }, []);\n\n  const fetchCompanyBranding = async () => {\n    try {\n      const response = await fetch('/api/branding/config', {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n      \n      if (response.ok) {\n        const data = await response.json();\n        setCompanyBranding(data.data);\n      }\n    } catch (error) {\n      console.error('Failed to fetch branding:', error);\n    }\n  };\n\n  const navigationItems = [\n    {\n      name: 'Dashboard',\n      href: '#',\n      icon: Briefcase,\n      roles: ['agent', 'manager', 'admin', 'videographer']\n    },\n    {\n      name: 'Bookings',\n      href: '#bookings',\n      icon: Calendar,\n      roles: ['agent', 'manager', 'admin']\n    },\n    {\n      name: 'Analytics',\n      href: '#analytics',\n      icon: BarChart3,\n      roles: ['manager', 'admin']\n    },\n    {\n      name: 'Files',\n      href: '#files',\n      icon: FileText,\n      roles: ['agent', 'manager', 'admin', 'videographer']\n    }\n  ];\n\n  const filteredNavItems = navigationItems.filter(item => \n    item.roles.includes(user.role)\n  );\n\n  const getUserInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  const getRoleBadgeColor = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'bg-red-100 text-red-800 border-red-200';\n      case 'manager':\n        return 'bg-purple-100 text-purple-800 border-purple-200';\n      case 'videographer':\n        return 'bg-blue-100 text-blue-800 border-blue-200';\n      case 'agent':\n        return 'bg-green-100 text-green-800 border-green-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  return (\n    <header className=\"bg-white border-b border-gray-200 shadow-sm relative z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo and Brand */}\n          <div className=\"flex items-center space-x-4\">\n            <div className=\"flex items-center space-x-3\">\n              {/* OSUS Logo following brand guidelines */}\n              <div className=\"flex items-center space-x-2\">\n                {companyBranding.logo_url ? (\n                  <img\n                    src={companyBranding.logo_url}\n                    alt={companyBranding.company_name}\n                    className=\"h-8 w-auto\" // Minimum size as per OSUS guidelines\n                    style={{ minWidth: '32px' }}\n                  />\n                ) : (\n                  // Fallback OSUS-style emblem\n                  <div className=\"h-8 w-8 rounded-lg bg-gradient-to-br from-osus-primary-500 to-osus-primary-700 flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-sm\">OS</span>\n                  </div>\n                )}\n                <div className=\"flex flex-col\">\n                  <h1 \n                    className=\"text-lg font-bold tracking-tight\"\n                    style={{ color: companyBranding.primary_color }}\n                  >\n                    {companyBranding.company_name}\n                  </h1>\n                  <span className=\"text-xs text-gray-500 -mt-1\">Resource Management</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Desktop Navigation */}\n            <nav className=\"hidden lg:flex items-center space-x-1 ml-8\">\n              {filteredNavItems.map((item) => {\n                const Icon = item.icon;\n                return (\n                  <Button\n                    key={item.name}\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"flex items-center space-x-2 text-gray-600 hover:text-osus-primary-600 hover:bg-osus-primary-50 transition-colors duration-200\"\n                  >\n                    <Icon className=\"h-4 w-4\" />\n                    <span>{item.name}</span>\n                  </Button>\n                );\n              })}\n            </nav>\n          </div>\n\n          {/* Right side actions */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Notifications */}\n            <div className=\"relative\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className=\"relative p-2 text-gray-600 hover:text-osus-primary-600 hover:bg-osus-primary-50\"\n              >\n                <Bell className=\"h-5 w-5\" />\n                {notifications > 0 && (\n                  <Badge \n                    className=\"absolute -top-1 -right-1 h-5 w-5 flex items-center justify-center p-0 text-xs bg-osus-secondary-500 hover:bg-osus-secondary-600\"\n                  >\n                    {notifications}\n                  </Badge>\n                )}\n              </Button>\n            </div>\n\n            {/* User Menu */}\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"flex items-center space-x-3 p-2 hover:bg-osus-primary-50 rounded-lg transition-colors duration-200\">\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarFallback className=\"bg-osus-primary-100 text-osus-primary-700 font-semibold\">\n                      {getUserInitials(user.name)}\n                    </AvatarFallback>\n                  </Avatar>\n                  <div className=\"hidden md:flex flex-col items-start\">\n                    <span className=\"text-sm font-medium text-gray-900\">{user.name}</span>\n                    <Badge \n                      className={cn(\n                        \"text-xs px-2 py-0.5 border\",\n                        getRoleBadgeColor(user.role)\n                      )}\n                      variant=\"outline\"\n                    >\n                      {user.role.charAt(0).toUpperCase() + user.role.slice(1)}\n                    </Badge>\n                  </div>\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\" className=\"w-56\">\n                <DropdownMenuLabel>\n                  <div className=\"flex flex-col space-y-1\">\n                    <span>{user.name}</span>\n                    <span className=\"text-sm text-muted-foreground\">{user.email}</span>\n                  </div>\n                </DropdownMenuLabel>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem className=\"flex items-center space-x-2\">\n                  <User className=\"h-4 w-4\" />\n                  <span>Profile</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem className=\"flex items-center space-x-2\">\n                  <Settings className=\"h-4 w-4\" />\n                  <span>Settings</span>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem \n                  onClick={onLogout}\n                  className=\"flex items-center space-x-2 text-red-600 focus:text-red-600\"\n                >\n                  <LogOut className=\"h-4 w-4\" />\n                  <span>Sign out</span>\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n\n            {/* Mobile menu button */}\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"lg:hidden p-2\"\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            >\n              {mobileMenuOpen ? (\n                <X className=\"h-5 w-5\" />\n              ) : (\n                <Menu className=\"h-5 w-5\" />\n              )}\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation Menu */}\n      {mobileMenuOpen && (\n        <div className=\"lg:hidden border-t border-gray-200 bg-white\">\n          <div className=\"px-4 py-2 space-y-1\">\n            {filteredNavItems.map((item) => {\n              const Icon = item.icon;\n              return (\n                <Button\n                  key={item.name}\n                  variant=\"ghost\"\n                  className=\"w-full justify-start flex items-center space-x-3 text-gray-600 hover:text-osus-primary-600 hover:bg-osus-primary-50\"\n                  onClick={() => setMobileMenuOpen(false)}\n                >\n                  <Icon className=\"h-4 w-4\" />\n                  <span>{item.name}</span>\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n      {/* OSUS Brand Accent Line */}\n      <div \n        className=\"h-1 w-full\"\n        style={{\n          background: `linear-gradient(90deg, ${companyBranding.primary_color} 0%, #f97316 100%)`\n        }}\n      />\n    </header>\n  );\n}"